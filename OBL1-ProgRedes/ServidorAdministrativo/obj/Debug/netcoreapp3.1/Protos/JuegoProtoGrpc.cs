// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/juegoProto.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ServidorAdministrativo.Protos {
  public static partial class ServicioJuego
  {
    static readonly string __ServiceName = "juegoProtoService.ServicioJuego";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.JuegoProto> __Marshaller_juegoProtoService_JuegoProto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.JuegoProto.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.ProtoBool> __Marshaller_juegoProtoService_ProtoBool = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.ProtoBool.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.MensajeVacio> __Marshaller_juegoProtoService_MensajeVacio = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.MensajeVacio.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.JuegosProto> __Marshaller_juegoProtoService_JuegosProto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.JuegosProto.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.Mensaje> __Marshaller_juegoProtoService_Mensaje = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.Mensaje.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.ProtoUsuario> __Marshaller_juegoProtoService_ProtoUsuario = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.ProtoUsuario.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto> __Marshaller_juegoProtoService_JuegoPorUsuarioProto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.MensajeInt> __Marshaller_juegoProtoService_MensajeInt = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.MensajeInt.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.CalificacionProto> __Marshaller_juegoProtoService_CalificacionProto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.CalificacionProto.Parser));
    static readonly grpc::Marshaller<global::ServidorAdministrativo.Protos.JuegoModificarProto> __Marshaller_juegoProtoService_JuegoModificarProto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServidorAdministrativo.Protos.JuegoModificarProto.Parser));

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool> __Method_AgregarJuegos = new grpc::Method<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AgregarJuegos",
        __Marshaller_juegoProtoService_JuegoProto,
        __Marshaller_juegoProtoService_ProtoBool);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.JuegosProto> __Method_ObtenerJuegos = new grpc::Method<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.JuegosProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ObtenerJuegos",
        __Marshaller_juegoProtoService_MensajeVacio,
        __Marshaller_juegoProtoService_JuegosProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool> __Method_EsJuegoExistente = new grpc::Method<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EsJuegoExistente",
        __Marshaller_juegoProtoService_JuegoProto,
        __Marshaller_juegoProtoService_ProtoBool);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegoProto> __Method_BuscarJuegoPortTitulo = new grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegoProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuscarJuegoPortTitulo",
        __Marshaller_juegoProtoService_Mensaje,
        __Marshaller_juegoProtoService_JuegoProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.ProtoUsuario, global::ServidorAdministrativo.Protos.JuegosProto> __Method_JuegoUsuarios = new grpc::Method<global::ServidorAdministrativo.Protos.ProtoUsuario, global::ServidorAdministrativo.Protos.JuegosProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JuegoUsuarios",
        __Marshaller_juegoProtoService_ProtoUsuario,
        __Marshaller_juegoProtoService_JuegosProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegosProto> __Method_BuscarJuegoPorGenero = new grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegosProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuscarJuegoPorGenero",
        __Marshaller_juegoProtoService_Mensaje,
        __Marshaller_juegoProtoService_JuegosProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.MensajeVacio> __Method_VerCatalogo = new grpc::Method<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.MensajeVacio>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerCatalogo",
        __Marshaller_juegoProtoService_MensajeVacio,
        __Marshaller_juegoProtoService_MensajeVacio);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.JuegoProto> __Method_AdquirirJuegoPorUsuario = new grpc::Method<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.JuegoProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AdquirirJuegoPorUsuario",
        __Marshaller_juegoProtoService_JuegoPorUsuarioProto,
        __Marshaller_juegoProtoService_JuegoProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.MensajeInt, global::ServidorAdministrativo.Protos.JuegosProto> __Method_BuscarJuegoPorCalificacion = new grpc::Method<global::ServidorAdministrativo.Protos.MensajeInt, global::ServidorAdministrativo.Protos.JuegosProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuscarJuegoPorCalificacion",
        __Marshaller_juegoProtoService_MensajeInt,
        __Marshaller_juegoProtoService_JuegosProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.ProtoBool> __Method_EliminarJuego = new grpc::Method<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.ProtoBool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EliminarJuego",
        __Marshaller_juegoProtoService_Mensaje,
        __Marshaller_juegoProtoService_ProtoBool);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.CalificacionProto, global::ServidorAdministrativo.Protos.ProtoBool> __Method_AgregarCalificacion = new grpc::Method<global::ServidorAdministrativo.Protos.CalificacionProto, global::ServidorAdministrativo.Protos.ProtoBool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AgregarCalificacion",
        __Marshaller_juegoProtoService_CalificacionProto,
        __Marshaller_juegoProtoService_ProtoBool);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.JuegoModificarProto, global::ServidorAdministrativo.Protos.JuegoProto> __Method_ModificarJuego = new grpc::Method<global::ServidorAdministrativo.Protos.JuegoModificarProto, global::ServidorAdministrativo.Protos.JuegoProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModificarJuego",
        __Marshaller_juegoProtoService_JuegoModificarProto,
        __Marshaller_juegoProtoService_JuegoProto);

    static readonly grpc::Method<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.ProtoBool> __Method_DesasociarJuegoUsuario = new grpc::Method<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.ProtoBool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DesasociarJuegoUsuario",
        __Marshaller_juegoProtoService_JuegoPorUsuarioProto,
        __Marshaller_juegoProtoService_ProtoBool);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ServidorAdministrativo.Protos.JuegoProtoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServicioJuego</summary>
    [grpc::BindServiceMethod(typeof(ServicioJuego), "BindService")]
    public abstract partial class ServicioJuegoBase
    {
      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.ProtoBool> AgregarJuegos(global::ServidorAdministrativo.Protos.JuegoProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegosProto> ObtenerJuegos(global::ServidorAdministrativo.Protos.MensajeVacio request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.ProtoBool> EsJuegoExistente(global::ServidorAdministrativo.Protos.JuegoProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegoProto> BuscarJuegoPortTitulo(global::ServidorAdministrativo.Protos.Mensaje request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegosProto> JuegoUsuarios(global::ServidorAdministrativo.Protos.ProtoUsuario request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegosProto> BuscarJuegoPorGenero(global::ServidorAdministrativo.Protos.Mensaje request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.MensajeVacio> VerCatalogo(global::ServidorAdministrativo.Protos.MensajeVacio request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegoProto> AdquirirJuegoPorUsuario(global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegosProto> BuscarJuegoPorCalificacion(global::ServidorAdministrativo.Protos.MensajeInt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.ProtoBool> EliminarJuego(global::ServidorAdministrativo.Protos.Mensaje request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.ProtoBool> AgregarCalificacion(global::ServidorAdministrativo.Protos.CalificacionProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.JuegoProto> ModificarJuego(global::ServidorAdministrativo.Protos.JuegoModificarProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServidorAdministrativo.Protos.ProtoBool> DesasociarJuegoUsuario(global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ServicioJuegoBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AgregarJuegos, serviceImpl.AgregarJuegos)
          .AddMethod(__Method_ObtenerJuegos, serviceImpl.ObtenerJuegos)
          .AddMethod(__Method_EsJuegoExistente, serviceImpl.EsJuegoExistente)
          .AddMethod(__Method_BuscarJuegoPortTitulo, serviceImpl.BuscarJuegoPortTitulo)
          .AddMethod(__Method_JuegoUsuarios, serviceImpl.JuegoUsuarios)
          .AddMethod(__Method_BuscarJuegoPorGenero, serviceImpl.BuscarJuegoPorGenero)
          .AddMethod(__Method_VerCatalogo, serviceImpl.VerCatalogo)
          .AddMethod(__Method_AdquirirJuegoPorUsuario, serviceImpl.AdquirirJuegoPorUsuario)
          .AddMethod(__Method_BuscarJuegoPorCalificacion, serviceImpl.BuscarJuegoPorCalificacion)
          .AddMethod(__Method_EliminarJuego, serviceImpl.EliminarJuego)
          .AddMethod(__Method_AgregarCalificacion, serviceImpl.AgregarCalificacion)
          .AddMethod(__Method_ModificarJuego, serviceImpl.ModificarJuego)
          .AddMethod(__Method_DesasociarJuegoUsuario, serviceImpl.DesasociarJuegoUsuario).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServicioJuegoBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AgregarJuegos, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool>(serviceImpl.AgregarJuegos));
      serviceBinder.AddMethod(__Method_ObtenerJuegos, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.JuegosProto>(serviceImpl.ObtenerJuegos));
      serviceBinder.AddMethod(__Method_EsJuegoExistente, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.JuegoProto, global::ServidorAdministrativo.Protos.ProtoBool>(serviceImpl.EsJuegoExistente));
      serviceBinder.AddMethod(__Method_BuscarJuegoPortTitulo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegoProto>(serviceImpl.BuscarJuegoPortTitulo));
      serviceBinder.AddMethod(__Method_JuegoUsuarios, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.ProtoUsuario, global::ServidorAdministrativo.Protos.JuegosProto>(serviceImpl.JuegoUsuarios));
      serviceBinder.AddMethod(__Method_BuscarJuegoPorGenero, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.JuegosProto>(serviceImpl.BuscarJuegoPorGenero));
      serviceBinder.AddMethod(__Method_VerCatalogo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.MensajeVacio, global::ServidorAdministrativo.Protos.MensajeVacio>(serviceImpl.VerCatalogo));
      serviceBinder.AddMethod(__Method_AdquirirJuegoPorUsuario, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.JuegoProto>(serviceImpl.AdquirirJuegoPorUsuario));
      serviceBinder.AddMethod(__Method_BuscarJuegoPorCalificacion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.MensajeInt, global::ServidorAdministrativo.Protos.JuegosProto>(serviceImpl.BuscarJuegoPorCalificacion));
      serviceBinder.AddMethod(__Method_EliminarJuego, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.Mensaje, global::ServidorAdministrativo.Protos.ProtoBool>(serviceImpl.EliminarJuego));
      serviceBinder.AddMethod(__Method_AgregarCalificacion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.CalificacionProto, global::ServidorAdministrativo.Protos.ProtoBool>(serviceImpl.AgregarCalificacion));
      serviceBinder.AddMethod(__Method_ModificarJuego, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.JuegoModificarProto, global::ServidorAdministrativo.Protos.JuegoProto>(serviceImpl.ModificarJuego));
      serviceBinder.AddMethod(__Method_DesasociarJuegoUsuario, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServidorAdministrativo.Protos.JuegoPorUsuarioProto, global::ServidorAdministrativo.Protos.ProtoBool>(serviceImpl.DesasociarJuegoUsuario));
    }

  }
}
#endregion
